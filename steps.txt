1) oc get tridentversions -n trident  //it retrieve the information about tridentversions in namespace trident
2) oc get pods -n trident //it will shows pods from namespace trident
3) oc get sc // it will retrieve storage classes info
4) Create a service account file called astracontrol-service-account.yaml (namespace is not mentioned yaml is creating in default adjust if needed)
	oc apply -f astracontrol-service-account.yaml // it will apply the configuration of yaml to cluster 

5) Create a ClusterRole file called astra-admin-account.yaml.
	
	oc apply -f astra-admin-account.yaml  // apply the configuration of yaml to cluster  instead of apply we can also use create for creating in openshift

6) Create a ClusterRoleBinding file called astracontrol-clusterrolebinding.yaml (in yaml namespace mention is default adjust as needed)

	oc apply -f astracontrol-clusterrolebinding.yaml // apply the configuration of yaml to cluster  instead of apply we can also use create for creating in openshift

7) oc get serviceaccount astracontrol-service-account --context <context> --namespace default -o json

  --  It is used to retrieve information about ServiceAccount named "astracontrol-service-account" in the "default" namespace, using a specific context int he json format
  -- TO get the correct context to be used following command to check 
  		oc config get-contexts // this command will displat list of available context choose the one to be used in the above command 

8) Create a create-occonfig.sh file. Replace TOKEN_INDEX in the beginning of the following script with the correct value.

9) source create-occonfig.sh  //to apply script on the cluster

10) mv occonfig-sa YOUR_CLUSTER_NAME_occonfig  // (Optional) Rename the kubeconfig to a meaningful name for your cluster.









